version: 2.1

orbs:
  gor: hubci/goreleaser@2.3
  osd: hubci/sphere@0.2
  aptly: felicianotech/aptly@0.1

executors:
  linux-docker:
    docker:
      - image: cimg/base:2023.04
  linux-amd64:
    machine:
      image: ubuntu-2204:2023.04.1
  linux-arm64:
    machine:
      image: ubuntu-2004:2023.04.1
    resource_class: arm.medium
  macos:
    macos:
      xcode: 14.0.0
  windows:
    machine:
      image: windows-server-2022-gui:2023.03.1
      resource_class: windows.medium

workflows:
  main-wf:
    jobs:
      - test
      - gor/release:
          version: "1.18.2"
          go-version: "1.20.4"
          dry-run: true
          post-steps:
            - persist_to_workspace:
                root: "."
                paths:
                  - "dist"
      - test-with-images:
          requires:
            - gor/release
          matrix:
            parameters:
              image:
                - linux-docker
                - linux-amd64
                - linux-arm64
                - macos
                #- windows
  release-wf:
    jobs:
      - test:
          filters:
            branches:
              ignore: /.*/
            tags:
              # Simplified SemVer regex
              only: /^v\d+\.\d+\.\d+$/
      - gor/release:
          version: "1.18.2"
          go-version: "1.20.4"
          filters:
            branches:
              ignore: /.*/
            tags:
              # Simplified SemVer regex
              only: /^v\d+\.\d+\.\d+$/
          post-steps:
            - persist_to_workspace:
                root: "."
                paths:
                  - "dist"
          context: goreleaser-ctx
      - deb-publish:
          requires:
            - gor/release
          filters:
            branches:
              ignore: /.*/
            tags:
              # Simplified SemVer regex
              only: /^v\d+\.\d+\.\d+$/

jobs:
  test:
    docker:
      - image: cimg/go:1.20.4
    environment:
      GOTESTSUM_JUNITFILE: "junit/unit-tests.xml"
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: "Download Dependancies"
          command: cd arc && go mod download
      - run:
          name: "Run Tests & Coverage"
          command: |
            cd ./arc
            mkdir junit
            gotestsum -- -coverprofile=coverage.txt -covermode=atomic ./...
            bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit/unit-tests.xml
      - run:
          name: "Upload to Codecov"
          command: cd arc && bash <(curl -s https://codecov.io/bash)
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/home/circleci/.cache/go-build"
  test-with-images:
    parameters:
      image:
        type: executor
    executor: <<parameters.image>>
    steps:
      - osd/init
      - attach_workspace:
          at: .
      - run: |
          V1=""

          if uname -m | grep "x86_64"; then
            V1="_v1"
          fi

          if [ $OSD_FAMILY == "linux" ]; then

            ./dist/arc_linux_$(dpkg --print-architecture)${V1}/arc version
          else
            ./dist/arc_darwin_amd64${V1}/arc version
          fi
  deb-publish:
    docker:
      - image: cimg/base:2023.04
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys
      - run: |
          echo 'pkg.atl.revidian.net ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBE16slz1okRPeUhxIpzBCn9rHqjk51ylxEYlYXvblswcxOQ0rPyAX6N8Bd2pnsh99xce/jaX2KJHPLPCc+zAXTg= root@li361-16' >> ~/.ssh/known_hosts
      - run: |
          ssh pkg@pkg.atl.revidian.net "mkdir ~/incoming/arc-${CIRCLE_TAG}"
          scp ./dist/*.deb pkg@pkg.atl.revidian.net:incoming/arc-${CIRCLE_TAG}/
      - aptly/publish-release:
          hostname: "pkg@pkg.atl.revidian.net"
          codename: "focal"
          project: "arc"
      - aptly/publish-release:
          hostname: "pkg@pkg.atl.revidian.net"
          codename: "jammy"
          project: "arc"
      - aptly/publish-release:
          hostname: "pkg@pkg.atl.revidian.net"
          codename: "lunar"
          project: "arc"
      - aptly/publish-release:
          hostname: "pkg@pkg.atl.revidian.net"
          codename: "mantic"
          project: "arc"
      - run: |
          ssh pkg@pkg.atl.revidian.net "rm -r ~/incoming/arc-${CIRCLE_TAG}"
